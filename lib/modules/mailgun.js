// Generated by CoffeeScript 1.7.1
(function() {
  'use strict';
  var co, debug, moment, nsq, request, writer, _;

  debug = require('debug')('trampoline:index');

  _ = require('underscore');

  request = require('superagent');

  moment = require('moment');

  nsq = require('nsq.js');

  co = require('co');

  writer = nsq.writer(':24150');

  writer.on('error', function(error) {
    return debug('writer error %s', error.message);
  }).on('error response', function(error) {
    return debug('writer, nsq response error %s', error.message);
  });

  module.exports = co(function*(data, query) {
    var agent, e, mh, result;
    debug('handling request: %j', data);
    if (data == null) {
      return;
    }
    mh = data['message-headers'];
    if (_.isString(mh)) {
      data['message-headers'] = JSON.parse(mh);
    }
    if (query.type != null) {
      writer.publish(query.type, data);
    }
    result = {
      type: query.type || 'unknown',
      time: moment().toISOString(),
      data: data
    };
    agent = request('post', 'http://127.0.0.1:1080/1.0/event/put');
    try {
      yield agent.send([result]).end.bind(agent);
    } catch (_error) {
      e = _error;
      debug('faild to post to cube with message: %s', e.message);
    }
  });

}).call(this);
